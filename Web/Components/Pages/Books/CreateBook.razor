@page "/add"
@inject ILibraryService _service
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<h3>CreateBook</h3>

<EditForm Model="book" FormName="formBook" OnValidSubmit="Submit">
   
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>
    <div class="row mb-3">
        <div class="col-2">
            <label class="col-form-label">Title</label>
        </div>
        <div class="col-6">
            <InputText @bind-Value="book.Title" class="form-control"></InputText>
        </div>
    </div>
    <div class="row mb-3">
        <div class="col-2">
            <label class="col-form-label">Author</label>
        </div>
        <div class="col-6">
            <InputText @bind-Value="book.Author" class="form-control"></InputText>
        </div>
    </div>
    <div class="row mb-3">
        <div class="col-2">
            <label class="col-form-label">PublishedYear</label>
        </div>
        <div class="col-6">
            <InputNumber @bind-Value="book.PublishedYear" class="form-control"></InputNumber>
        </div>
    </div>
    <div class="row mb-3">
        <div class="col-2">
            <label class="col-form-label">Description</label>
        </div>
        <div class="col-6">
            <InputText @bind-Value="book.Description" class="form-control"></InputText>
        </div>
    </div>
    <div class="row mb-3">
        <div class="col-2">
            <label class="col-form-label">Genre</label>
        </div>
        <div class="col-6">
            <InputSelect @bind-Value="book.Genre" class="form-control">
                @foreach (var genre in Enum.GetValues(typeof(Genre)).Cast<Genre>())
                {
                    <option value="@genre">@genre</option>
                }
            </InputSelect>
        </div>
    </div>
    <div class="row mb-3">
        <div class="col-2">
            <label class="col-form-label">Availability</label>
        </div>
        <div class="col-6">
            <InputCheckbox @bind-Value="book.IsAvailable" class="form-check-input"></InputCheckbox>
        </div>
    </div>
    <br />
    <button class="btn btn-outline-success" type="submit">Save</button>

</EditForm>

<GoBack></GoBack>



@code {
    // to get data from form, you use the following parameter.
    [SupplyParameterFromForm]
    private BookDto book { get; set; } = new BookDto() { IsAvailable = false};

    private async Task Submit()
    {
        if(book is not null)
        {
            var response = await _service.CreateBookAsync<ResponseDTO>(book);
            if(response != null && response.IsSuccess)
            {
                NavigationManager.NavigateTo("/");
            }
        }


    }


}
